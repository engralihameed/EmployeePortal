// <auto-generated />
using System;
using EmployeePortal.Repository.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EmployeePortal.Repository.Migrations
{
    [DbContext(typeof(EmployeeDbContext))]
    [Migration("20211122194447_InitialSeedData")]
    partial class InitialSeedData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.12");

            modelBuilder.Entity("EmployeePortal.Core.Data.Entities.Department", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Departments");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f5203daa-13b8-4022-90d8-8f946bbf2b24"),
                            CreateDateTime = new DateTime(2021, 11, 22, 19, 44, 46, 469, DateTimeKind.Utc).AddTicks(3357),
                            Name = "HR"
                        },
                        new
                        {
                            Id = new Guid("d9224471-0a51-4ac0-9138-0d130b5379f0"),
                            CreateDateTime = new DateTime(2021, 11, 22, 19, 44, 46, 469, DateTimeKind.Utc).AddTicks(3372),
                            Name = "IT"
                        });
                });

            modelBuilder.Entity("EmployeePortal.Core.Data.Entities.Employee", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Bonus")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("TEXT");

                    b.Property<Guid>("DepartmentId")
                        .HasColumnType("TEXT");

                    b.Property<string>("EmployeeNumber")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeTypeId")
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("HourlyPay")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobDescription")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("ModifiedDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentId");

                    b.HasIndex("EmployeeTypeId");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("05a4c183-267f-46d6-a140-09ccc05317ab"),
                            Bonus = 10m,
                            CreateDateTime = new DateTime(2021, 11, 22, 19, 44, 46, 467, DateTimeKind.Utc).AddTicks(6453),
                            DepartmentId = new Guid("f5203daa-13b8-4022-90d8-8f946bbf2b24"),
                            EmployeeNumber = "A1001",
                            EmployeeTypeId = 1,
                            HourlyPay = 8m,
                            JobDescription = "Manager",
                            Name = "John"
                        });
                });

            modelBuilder.Entity("EmployeePortal.Core.Data.Entities.EmployeeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("CreateDateTime")
                        .HasColumnType("TEXT");

                    b.Property<string>("Desription")
                        .HasColumnType("TEXT");

                    b.Property<int>("EmployeeJobType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("EmployeeTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDateTime = new DateTime(2021, 11, 22, 19, 44, 46, 469, DateTimeKind.Utc).AddTicks(8818),
                            Desription = "Permanent",
                            EmployeeJobType = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDateTime = new DateTime(2021, 11, 22, 19, 44, 46, 469, DateTimeKind.Utc).AddTicks(9279),
                            Desription = "Contract",
                            EmployeeJobType = 2
                        });
                });

            modelBuilder.Entity("EmployeePortal.Core.Data.Entities.Employee", b =>
                {
                    b.HasOne("EmployeePortal.Core.Data.Entities.Department", "Department")
                        .WithMany()
                        .HasForeignKey("DepartmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EmployeePortal.Core.Data.Entities.EmployeeType", "EmployeeType")
                        .WithMany()
                        .HasForeignKey("EmployeeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Department");

                    b.Navigation("EmployeeType");
                });
#pragma warning restore 612, 618
        }
    }
}
